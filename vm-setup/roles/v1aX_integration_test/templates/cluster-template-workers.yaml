apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: ${ CLUSTER_NAME }
  namespace: ${ NAMESPACE }
  labels:
    cluster.x-k8s.io/cluster-name: ${ CLUSTER_NAME }
    nodepool: nodepool-0
spec:
  clusterName: ${ CLUSTER_NAME }
  replicas: ${ NUM_OF_WORKER_REPLICAS }
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${ CLUSTER_NAME }
      nodepool: nodepool-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: ${ CLUSTER_NAME }
        nodepool: nodepool-0
    spec:
      nodeDrainTimeout: ${ NODE_DRAIN_TIMEOUT }             
      clusterName: ${ CLUSTER_NAME }
      version: ${ KUBERNETES_VERSION }
      bootstrap:
        configRef:
          name: ${ CLUSTER_NAME }-workers
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: ${ CLUSTER_NAME }-workers
{% if CAPM3_VERSION == "v1alpha3" %}
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
{% else %}
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
{% endif %}
        kind: Metal3MachineTemplate
---
{% if CAPM3_VERSION == "v1alpha3" %}
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
{% else %}
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
{% endif %}
kind: Metal3MachineTemplate
metadata:
  name: ${ CLUSTER_NAME }-workers
  namespace: ${ NAMESPACE }
spec:
  template:
    spec:
      image:
        url: ${ IMAGE_URL }
        checksum: ${ IMAGE_CHECKSUM }
        checksumType: ${ IMAGE_CHECKSUM_TYPE }
        format: ${ IMAGE_FORMAT }
{% if CAPM3_VERSION != "v1alpha3" %}
{% with METAL3DATATEMPLATE_NAME=${ CLUSTER_NAME }-workers-template %}
      dataTemplate:
        name: {{ METAL3DATATEMPLATE_NAME }}
---
{% include metal3datatemplate-spec-template.yaml %}
{% endwith %}
{% endif %}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: ${ CLUSTER_NAME }-workers
  namespace: ${ NAMESPACE }
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: "{{ '{{ ds.meta_data.name }}' }}"
          kubeletExtraArgs:
            node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
            provider-id: "metal3://{{ '{{ ds.meta_data.uuid }}' }}"
            feature-gates: "AllAlpha=false,RunAsGroup=true"
            container-runtime: "remote"
            cgroup-driver: "systemd"
            container-runtime-endpoint: "unix:///var/run/crio/crio.sock"
            runtime-request-timeout: "5m"
${ WORKERS_KUBEADM_EXTRA_CONFIG }
