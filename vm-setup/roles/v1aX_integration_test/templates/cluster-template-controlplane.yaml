kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
metadata:
  name: ${ CLUSTER_NAME }
  namespace: ${ NAMESPACE }
spec:
  rolloutStrategy:
    rollingUpdate:
      maxSurge: ${ MAX_SURGE_VALUE }
  nodeDrainTimeout: ${ NODE_DRAIN_TIMEOUT }
  replicas: ${ NUM_OF_MASTER_REPLICAS }
  version: ${ KUBERNETES_VERSION }
  infrastructureTemplate:
    kind: Metal3MachineTemplate
{% if CAPM3_VERSION == "v1alpha3" %}
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
{% else %}
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
{% endif %}
    name: ${ CLUSTER_NAME }-controlplane
  kubeadmConfigSpec:
    clusterConfiguration: {}
    joinConfiguration:
      controlPlane: {}
      nodeRegistration:
        name: "{{ '{{ ds.meta_data.name }}' }}"
        kubeletExtraArgs:
          node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
          provider-id: "metal3://{{ '{{ ds.meta_data.uuid }}' }}"
          feature-gates: "AllAlpha=false,RunAsGroup=true"
          container-runtime: "remote"
          cgroup-driver: "systemd"
          container-runtime-endpoint: "unix:///var/run/crio/crio.sock"
          runtime-request-timeout: "5m"
    initConfiguration:
      nodeRegistration:
        name: "{{ '{{ ds.meta_data.name }}' }}"
        kubeletExtraArgs:
          node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
          provider-id: "metal3://{{ '{{ ds.meta_data.uuid }}' }}"
          feature-gates: "AllAlpha=false,RunAsGroup=true"
          container-runtime: "remote"
          cgroup-driver: "systemd"
          container-runtime-endpoint: "unix:///var/run/crio/crio.sock"
          runtime-request-timeout: "5m"
${ CTLPLANE_KUBEADM_EXTRA_CONFIG }
---
{% if CAPM3_VERSION == "v1alpha3" %}
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
{% else %}
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha4
{% endif %}
kind: Metal3MachineTemplate
metadata:
  name: ${ CLUSTER_NAME }-controlplane
  namespace: ${ NAMESPACE }
spec:
  template:
    spec:
      image:
        url: ${ IMAGE_URL }
        checksum: ${ IMAGE_CHECKSUM }
        checksumType: ${ IMAGE_CHECKSUM_TYPE }
        format: ${ IMAGE_FORMAT }
{% if CAPM3_VERSION != "v1alpha3" %}
      dataTemplate:
        name: ${ CLUSTER_NAME }-controlplane-template
---
{% with template_type="controlplane" %}
{% include "metal3datatemplate-template.yaml" %}
{% endwith %}
{% endif %}
